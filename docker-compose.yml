version: "3.8"

services:
  # ──────────────────────────────────────────────────────────────
  # 1) nginx-proxy: catches all HTTP/HTTPS, proxies to the right service
  # ──────────────────────────────────────────────────────────────
  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    environment:
      - DEFAULT_HOST=chanim.online        # unknown‐host → universal-agent
    labels:
      - com.github.nginx-proxy.nginx=true
    networks: [proxy]

  # ──────────────────────────────────────────────────────────────
  # 2) acme-companion: automatically issues/renews certs for both hosts
  # ──────────────────────────────────────────────────────────────
  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    restart: always
    depends_on: [nginx-proxy]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - ./acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=admin@chanim.online
      - NGINX_PROXY_CONTAINER=nginx-proxy
      # For initial testing (to avoid production-rate limits), uncomment:
      # - ACME_DIRECTORY_URL=https://acme-staging-v02.api.letsencrypt.org/directory
    networks: [proxy]

  # ──────────────────────────────────────────────────────────────
  # 3) universal-agent: your Chainlit app, listening on port 8000
  #    It advertises both hosts so nginx-proxy + acme can do their job.
  # ──────────────────────────────────────────────────────────────
  universal-agent:
    build: .
    container_name: universal-agent
    env_file: [.env]
    volumes: 
      - ".:/app"
    expose:
      - "8000"
    environment:
      - VIRTUAL_HOST=chanim.online,www.chanim.online
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=chanim.online,www.chanim.online
      - LETSENCRYPT_EMAIL=admin@chanim.online
      - HTTPS_METHOD=noredirect            # keep HTTP-01 challenge on port 80
      - CHAINLIT_COOKIE_DOMAIN=.chanim.online
      - CHAINLIT_COOKIE_SAMESITE=none
      - PYTHONUNBUFFERED=1
    depends_on:
      prisma-manager:
        condition: service_healthy
    networks: [proxy]

  # ──────────────────────────────────────────────────────────────
  # 4) prisma-manager, postgres, localstack (unchanged)
  # ──────────────────────────────────────────────────────────────
  prisma-manager:
    build:
      context: ./prisma-manager
      dockerfile: Dockerfile
    container_name: prisma-manager
    env_file: [.env]
    depends_on:
      postgres:
        condition: service_healthy
    networks: [proxy]

  postgres:
    image: postgres:16
    container_name: postgres
    volumes:
      - ./.data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-root}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-root}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [proxy]

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    environment: 
      - SERVICES=s3
    ports: 
      - "4566:4566"
    volumes:
      - ./localstack-script.sh:/etc/localstack/init/ready.d/script.sh
      - /var/run/docker.sock:/var/run/docker.sock
    networks: [proxy]

networks:
  proxy:
    external: false
